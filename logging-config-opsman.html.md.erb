---
title: Configuring System Logging in Elastic Runtime
owner: APM
---

<strong><%= modified_date %></strong>

This topic explains how to scale the Pivotal Cloud Foundry (PCF)[Loggregator](../loggregator/architecture.html) component VMs, and to forward logs to an external aggregator service.


## <a id='syslog-forward'></a> Enable Syslog Forwarding

To forward system log messages to an external Reliable Event Logging Protocol (RELP) server, do the following:

1. From the Elastic Runtime tile, select **System Logging**.
	<%= image_tag 'sys-logging.png' %>

1. To include security events in your log stream, select the **Enable Cloud Controller security event logging** checkbox. This logs all API requests, including the endpoint, user, source IP, and request result, in the Common Event Format (CEF).

1. Enter the IP address of your syslog server in **External Syslog Aggregator Hostname** and its port in **External Syslog Aggregator Port**. The default port for a syslog server is `514`.
  <p class="note"><strong>Note:</strong> The host must be reachable from the Elastic Runtime network, accept TCP connections, and use the RELP protocol. Ensure your syslog server listens on external interfaces.</p>

1. Select TCP, RELP, or UDP as your **External Syslog Network Protocol** to use when forwarding logs.

1. For the **Syslog Drain Buffer Size**, enter the number of messages the Doppler server can hold from Metron agents before the server starts to drop them. See the [Loggregator Guide for Cloud Foundry Operators](../loggregator/log-ops-guide.html) topic for more details.

1. Click **Save**.


## <a id='scaling'></a> Scale Loggregator

Apps and PCF system components constantly generate log and metrics data. The Loggregator system handles this data as follows. See [Overview of the Loggregator System](../loggregator/architecture.html) for more information. 

* The [Metron](../loggregator/architecture.html#metron) agent running on each component or application VM collects and sends this data out to Doppler components. 
* [Doppler](../loggregator/architecture.html#doppler) components temporarily buffer the data before periodically forwarding it to the Traffic Controller. When the log and metrics data input to a Doppler exceeds its buffer size for a given interval, data can be lost. 
* The [Traffic Controller](../loggregator/architecture.html#traffic-controller) serves the aggregated data stream through the Firehose WebSocket endpoint.

Follow the instructions below to scale the Loggregator system. For guidance on monitoring and capacity planning, see [Monitoring Pivotal Cloud Foundry](../monitoring/).

### <a id="buffer"></a> Increase Buffer Size

1. From the Elastic Runtime tile, select **System Logging**.

1. Increase the **Drain Buffer Size** to prevent loss of log data.

1. Click **Save**.

1. Click **Apply Changes**.

### <a id="instances"></a> Add Component VM Instances

1. From the **Elastic Runtime** tile, select **Resource Config**.

1. Increase the number in the **Instances** column of the component you want to scale. You can add instances for the following Loggregator components: 
	* **Loggregator Traffic Controller**
		<p class="note"><strong>Note:</strong> The <a href="../loggregator/architecture.html#metron">Reverse Log Proxy (RLP)</a> BOSH job is colocated with the Traffic Controller VM. If you want to scale Loggregator to handle more logs for syslog drains, you can add instances of the Traffic Controller.</p>
	* **Syslog Adapter**
	* **Doppler Server**
  <%= image_tag 'loggregator-vms.png' %>

1. Click **Save**.

1. Click **Apply Changes**.